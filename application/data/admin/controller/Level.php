<?php
namespace app\admin\controller;
use think\Controller;
use think\Db;
use app\api;
class Level extends Online
{
    protected $sye_rate;
    protected $role_rate;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $sye_rate=Db::table('rate')
            ->where('id',1)
            ->field('settle_rate')
            ->find()['settle_rate'];
        $this->sye_rate=$sye_rate;
        $role_rate=Db::table('role')
            ->where("role_id",$this->role_id)
            ->field('settle_rate')
            ->find()['settle_rate'];
        $this->role_rate=$role_rate;
    }

    public function index()
    {
        if(request()->isGet()){
            $where_data=" role_id >1 and role_id<5 ";
            $count=Db::table('role')
                ->field('count(role_id) as count')
//                ->where($where_data)
                ->find()['count'];
            $list=[];
            $page='';
            if(!empty($count)){
                $list = Db::table('role')
//                    ->where($where_data)
                    ->paginate(5,$count)
                    ->each(function($item, $key){
                    });
                $page = $list->render();
            }
            // 模板变量赋值
            $this->assign('lists', $list);
            $this->assign('pages', $page);
            // 渲染模板输出
            $this->assign("sye_rate",$this->sye_rate);
            return $this->fetch('lists');
        }
    }
    //修改等级数据
    public function edit(){
        if(request()->isPost()){
            $settle_rate=input('post.settle_rate');
            $role_id=input('post.role_id');
            $save_data=input('post.');
            if($settle_rate>$this->sye_rate){
                $this->returnMsg['message']='输入汇率不能高于平台最高汇率';
                return $this->returnMsg;
            }
            if($role_id==1){
				$result=Db::table('role')
                ->where("role_id",$role_id)
                ->update([
					'role_name'=>input('role_name'),
					'role_text'=>input('role_text')
				]);
                $this->returnMsg['message']='默认初始等级名称简介修改成功。';
				 $this->returnMsg['url']=url('level/index');
				$this->returnMsg['status']=200;
                return $this->returnMsg;
            }
            $result=Db::table('role')
                ->where("role_id",$role_id)
                ->update($save_data);

            if(!$result){
                $this->returnMsg['message']='更新失败';
                return $this->returnMsg;
            }
            $this->returnMsg['message']='更新成功';
            $this->returnMsg['url']=url('level/index');
            $this->returnMsg['status']=200;
            return $this->returnMsg;
        }
        $role_id=input('get.role_id');
        $data=model('role')
            ->where('role_id',$role_id)
            ->find();
        $this->assign('data',$data);
        return $this->fetch('edit');
    }

    public function add(){
        if(request()->isPost()){
            $add_data=input('post.');
            foreach($add_data as $key =>$val){
                if(empty($val) && $key!='role_id'){
                    $this->returnMsg['message']=$key."不能为空";
                    return $this->returnMsg;
                }
            }
            $add_data['role_time']=time();
            $res=model('role')
                ->insert($add_data);
            if(!$res){
                $this->returnMsg['message']="添加失败，请重试";
                return $this->returnMsg;
            }
            $this->returnMsg['message']="添加成功";
            $this->returnMsg['status']=200;
            $this->returnMsg['url']=url('level/index');
            return $this->returnMsg;
        }
        $this->assign('data',[]);
        return $this->fetch('edit');
    }
    public function delete(){
        $ids=input('ids/a');
        if(empty($ids)){
            $this->returnMsg['message']='请选择删除对象';
            return $this->returnMsg;
        }
        $count=model('user')
            ->where('role_id','in',$ids)
            ->count();
        if($count>0){
            $this->returnMsg['message']='已有用户绑定所选等级，无法删除';
            return $this->returnMsg;
        }
        $res=model('role')
            ->where('role_id','in',$ids)
            ->delete();
        if(!$res){
            $this->returnMsg['message']='删除失败，请重试';
            return $this->returnMsg;
        }
        $this->returnMsg['message']='删除成功';
        $this->returnMsg['status']=200;
        $this->returnMsg['url']=url('level/index');
        return $this->returnMsg;
    }
}
