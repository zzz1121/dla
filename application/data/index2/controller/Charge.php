<?php
namespace app\index2\controller;
use think\Controller;
use think\Db;
use app\api;
class Charge extends Online
{
    protected $sye_rate;
    protected $role_rate;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $sye_rate=Db::table('rate')
            ->where('id',1)
            ->field('settle_rate')
            ->find()['settle_rate'];
        $this->sye_rate=$sye_rate;
    }

    public function index()
    {
        $rate=model('user')
            ->where('user_id',$this->user_id)
            ->find();
        $this->assign('sye_rate',$this->sye_rate);
        $this->assign('rate_data',$rate);
        return $this->fetch('rate');
    }

    public function update(){
        $rate=model('user')
            ->where('user_id',$this->user_id)
            ->find();
        $settle_2=input('settle_2');
        $settle_3=input('settle_3');
        if($settle_2<$rate['settle_rate'] || $settle_2>$this->sye_rate || $settle_3<$rate['settle_rate'] || $settle_3>$this->sye_rate){
            $this->returnMsg['message']="费率设定区间为：".$rate['settle_rate']." 到：".$this->sye_rate."之间";
            return $this->returnMsg;
        };
        if($settle_3<$settle_2){
            $this->returnMsg['message']="推广费率不能低于直属费率";
            return $this->returnMsg;
        }
        $result=model('user')
            ->where('user_id',$this->user_id)
            ->update([
                'settle_2'=>$settle_2,
                'settle_3'=>$settle_3
            ]);
        if(!$result){
            $this->returnMsg['message']="更新失败";
            return $this->returnMsg;
        }
        $user=$rate;
        if(!empty($rate['underling'])){
            $res2=model('user')
                ->where(['merchant_id'=>$this->user_id])
                ->update([
                    'settle_rate'=>$settle_2

                ]);
            if(!$res2){
                $this->returnMsg['message']='操作失败，请重试2';
                Db::rollback();
                return $this->returnMsg;
            }
            if(!empty($user['indirect'])){
                $merchant_id=$this->user_id;
                $res3=Db::table('user')
                    ->field('user_id')
                    ->where('merchant_id','in',function($query)use($merchant_id){
                        $query->table('user')->field('user_id')->where(['merchant_id'=>$merchant_id]);
                    })
                    ->select();
                $sql='';
                foreach($res3 as $val){
                    $sql.=$val['user_id'].',';
                }

                $sql=substr($sql,0,-1);
                $res4=model('user')
                    ->where(['user_id'=>array('in',$sql)])
                    ->update([
                        'user_type'=>2,
                        'group_id'=>$merchant_id,
                        'settle_rate'=>$settle_3
                    ]);
                if(!$res3){
                    $this->returnMsg['message']='操作失败，请重试3';
                    Db::rollback();
                    return $this->returnMsg;
                }
            }
        }
        $this->returnMsg['message']="更新成功";
        $this->returnMsg['status']=200;
        $this->returnMsg['url']=url('index');
        return $this->returnMsg;


    }



}
